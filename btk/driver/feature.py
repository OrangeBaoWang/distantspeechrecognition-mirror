# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_feature', [dirname(__file__)])
        except ImportError:
            import _feature
            return _feature
        if fp is not None:
            try:
                _mod = imp.load_module('_feature', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _feature = swig_import_helper()
    del swig_import_helper
else:
    import _feature
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_feature.HAVE_DLFCN_H_swigconstant(_feature)
HAVE_DLFCN_H = _feature.HAVE_DLFCN_H

_feature.HAVE_ERROR_H_swigconstant(_feature)
HAVE_ERROR_H = _feature.HAVE_ERROR_H

_feature.HAVE_FCNTL_H_swigconstant(_feature)
HAVE_FCNTL_H = _feature.HAVE_FCNTL_H

_feature.HAVE_FLOAT_H_swigconstant(_feature)
HAVE_FLOAT_H = _feature.HAVE_FLOAT_H

_feature.HAVE_FLOOR_swigconstant(_feature)
HAVE_FLOOR = _feature.HAVE_FLOOR

_feature.HAVE_INTTYPES_H_swigconstant(_feature)
HAVE_INTTYPES_H = _feature.HAVE_INTTYPES_H

_feature.HAVE_LIBFFTW3_THREADS_swigconstant(_feature)
HAVE_LIBFFTW3_THREADS = _feature.HAVE_LIBFFTW3_THREADS

_feature.HAVE_LIBM_swigconstant(_feature)
HAVE_LIBM = _feature.HAVE_LIBM

_feature.HAVE_LIBPTHREAD_swigconstant(_feature)
HAVE_LIBPTHREAD = _feature.HAVE_LIBPTHREAD

_feature.HAVE_LIBUTIL_swigconstant(_feature)
HAVE_LIBUTIL = _feature.HAVE_LIBUTIL

_feature.HAVE_LIMITS_H_swigconstant(_feature)
HAVE_LIMITS_H = _feature.HAVE_LIMITS_H

_feature.HAVE_MALLOC_swigconstant(_feature)
HAVE_MALLOC = _feature.HAVE_MALLOC

_feature.HAVE_MALLOC_H_swigconstant(_feature)
HAVE_MALLOC_H = _feature.HAVE_MALLOC_H

_feature.HAVE_MEMORY_H_swigconstant(_feature)
HAVE_MEMORY_H = _feature.HAVE_MEMORY_H

_feature.HAVE_MEMSET_swigconstant(_feature)
HAVE_MEMSET = _feature.HAVE_MEMSET

_feature.HAVE_POW_swigconstant(_feature)
HAVE_POW = _feature.HAVE_POW

_feature.HAVE_PYTHON_swigconstant(_feature)
HAVE_PYTHON = _feature.HAVE_PYTHON

_feature.HAVE_REALLOC_swigconstant(_feature)
HAVE_REALLOC = _feature.HAVE_REALLOC

_feature.HAVE_SQRT_swigconstant(_feature)
HAVE_SQRT = _feature.HAVE_SQRT

_feature.HAVE_STDBOOL_H_swigconstant(_feature)
HAVE_STDBOOL_H = _feature.HAVE_STDBOOL_H

_feature.HAVE_STDINT_H_swigconstant(_feature)
HAVE_STDINT_H = _feature.HAVE_STDINT_H

_feature.HAVE_STDLIB_H_swigconstant(_feature)
HAVE_STDLIB_H = _feature.HAVE_STDLIB_H

_feature.HAVE_STRCHR_swigconstant(_feature)
HAVE_STRCHR = _feature.HAVE_STRCHR

_feature.HAVE_STRINGS_H_swigconstant(_feature)
HAVE_STRINGS_H = _feature.HAVE_STRINGS_H

_feature.HAVE_STRING_H_swigconstant(_feature)
HAVE_STRING_H = _feature.HAVE_STRING_H

_feature.HAVE_STRTOUL_swigconstant(_feature)
HAVE_STRTOUL = _feature.HAVE_STRTOUL

_feature.HAVE_SYS_STAT_H_swigconstant(_feature)
HAVE_SYS_STAT_H = _feature.HAVE_SYS_STAT_H

_feature.HAVE_SYS_TYPES_H_swigconstant(_feature)
HAVE_SYS_TYPES_H = _feature.HAVE_SYS_TYPES_H

_feature.HAVE_UNISTD_H_swigconstant(_feature)
HAVE_UNISTD_H = _feature.HAVE_UNISTD_H

_feature.HAVE_VPRINTF_swigconstant(_feature)
HAVE_VPRINTF = _feature.HAVE_VPRINTF

_feature.HAVE__BOOL_swigconstant(_feature)
HAVE__BOOL = _feature.HAVE__BOOL

_feature.LSTAT_FOLLOWS_SLASHED_SYMLINK_swigconstant(_feature)
LSTAT_FOLLOWS_SLASHED_SYMLINK = _feature.LSTAT_FOLLOWS_SLASHED_SYMLINK

_feature.LT_OBJDIR_swigconstant(_feature)
LT_OBJDIR = _feature.LT_OBJDIR

_feature.PACKAGE_swigconstant(_feature)
PACKAGE = _feature.PACKAGE

_feature.PACKAGE_BUGREPORT_swigconstant(_feature)
PACKAGE_BUGREPORT = _feature.PACKAGE_BUGREPORT

_feature.PACKAGE_NAME_swigconstant(_feature)
PACKAGE_NAME = _feature.PACKAGE_NAME

_feature.PACKAGE_STRING_swigconstant(_feature)
PACKAGE_STRING = _feature.PACKAGE_STRING

_feature.PACKAGE_TARNAME_swigconstant(_feature)
PACKAGE_TARNAME = _feature.PACKAGE_TARNAME

_feature.PACKAGE_URL_swigconstant(_feature)
PACKAGE_URL = _feature.PACKAGE_URL

_feature.PACKAGE_VERSION_swigconstant(_feature)
PACKAGE_VERSION = _feature.PACKAGE_VERSION

_feature.STDC_HEADERS_swigconstant(_feature)
STDC_HEADERS = _feature.STDC_HEADERS

_feature._ALL_SOURCE_swigconstant(_feature)
_ALL_SOURCE = _feature._ALL_SOURCE

_feature._GNU_SOURCE_swigconstant(_feature)
_GNU_SOURCE = _feature._GNU_SOURCE

_feature._POSIX_PTHREAD_SEMANTICS_swigconstant(_feature)
_POSIX_PTHREAD_SEMANTICS = _feature._POSIX_PTHREAD_SEMANTICS

_feature._TANDEM_SOURCE_swigconstant(_feature)
_TANDEM_SOURCE = _feature._TANDEM_SOURCE

_feature.__EXTENSIONS___swigconstant(_feature)
__EXTENSIONS__ = _feature.__EXTENSIONS__

_feature.VERSION_swigconstant(_feature)
VERSION = _feature.VERSION
import btk.stream
# This file is compatible with both classic and new-style classes.


